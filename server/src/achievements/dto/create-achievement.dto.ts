import { IsString, IsEnum, IsInt, IsObject, IsOptional, IsUrl } from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';
import { AchievementType, AchievementRequirement } from '../../entities/Achievement';
import { Type } from 'class-transformer';

export class RequirementDto implements AchievementRequirement {
    @ApiProperty({ 
        description: '–ú–µ—Ç—Ä–∏–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', 
        enum: ['total_workouts', 'total_distance', 'streak_days', 'level', 'exercise_count'],
        example: 'total_distance' 
    })
    @IsString()
    metric!: 'total_workouts' | 'total_distance' | 'streak_days' | 'level' | 'exercise_count';

    @ApiProperty({ description: '–ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', example: 42 })
    @IsInt()
    value!: number;
}

export class CreateAchievementDto {
    @ApiProperty({ description: '–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', example: '–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü' })
    @IsString()
    name!: string;

    @ApiProperty({ description: '–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', example: '–ü—Ä–æ–±–µ–∂–∞—Ç—å –≤ —Å—É–º–º–µ 42–∫–º' })
    @IsString()
    description!: string;

    @ApiProperty({ description: '–¢–∏–ø –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', enum: AchievementType, example: AchievementType.DISTANCE })
    @IsEnum(AchievementType)
    type!: AchievementType;

    @ApiProperty({ description: '–û—á–∫–∏ –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ', example: 100 })
    @IsInt()
    points!: number;

    @ApiProperty({ 
        description: '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
        type: RequirementDto,
        example: { metric: 'total_distance', value: 42 }
    })
    @IsObject()
    @Type(() => RequirementDto)
    requirements!: RequirementDto;

    @ApiProperty({ description: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ/–∑–Ω–∞—á–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', required: false })
    @IsOptional()
    @IsUrl()
    badge?: string;
    
    @ApiProperty({ description: '–ò–∫–æ–Ω–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è (—ç–º–æ–¥–∑–∏ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∫–æ–Ω–∫–∏)', required: false, example: 'üèÜ' })
    @IsOptional()
    @IsString()
    icon?: string;
} 